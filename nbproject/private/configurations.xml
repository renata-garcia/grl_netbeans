<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name=".idea">
      </df>
      <df name="addons">
        <df name="cma">
          <df name="include">
            <df name="grl">
              <df name="optimizers">
                <in>cma.h</in>
              </df>
            </df>
          </df>
          <df name="src">
            <in>cma.cpp</in>
          </df>
        </df>
        <df name="gl">
          <df name="include">
            <df name="grl">
              <df name="visualizations">
                <in>field.h</in>
                <in>mapping.h</in>
                <in>random_sample.h</in>
                <in>sample.h</in>
                <in>slice.h</in>
                <in>state.h</in>
                <in>trajectory.h</in>
                <in>value.h</in>
              </df>
            </df>
          </df>
          <df name="src">
            <in>field.cpp</in>
            <in>mapping.cpp</in>
            <in>random_sample.cpp</in>
            <in>sample.cpp</in>
            <in>slice.cpp</in>
            <in>state.cpp</in>
            <in>trajectory.cpp</in>
            <in>value.cpp</in>
          </df>
        </df>
        <df name="glut">
          <df name="cmake">
          </df>
          <df name="include">
            <df name="grl">
              <df name="visualizers">
                <in>glut.h</in>
              </df>
            </df>
          </df>
          <df name="src">
            <in>glut.cpp</in>
          </df>
        </df>
        <df name="leo">
          <df name="cfg">
          </df>
          <df name="csv">
          </df>
          <df name="include">
            <df name="grl">
              <df name="agents">
                <in>leo_fixed.h</in>
                <in>leo_preprogrammed.h</in>
                <in>leo_sma.h</in>
                <in>leo_squatting_agent.h</in>
                <in>leo_sym_wrapper.h</in>
                <in>leo_td.h</in>
              </df>
              <df name="environments">
                <df name="leo">
                  <df name="MX28">
                    <in>MX28_Specs.h</in>
                  </df>
                  <df name="RX28">
                    <in>RX28_Specs.h</in>
                  </df>
                  <df name="XM430">
                    <in>XM430_210_Specs.h</in>
                  </df>
                  <in>AgentInterface.h</in>
                  <in>DynamixelSpecs.h</in>
                  <in>Filter.h</in>
                  <in>LeoBhWalkSym.h</in>
                  <in>STGAgentQLeo.h</in>
                  <in>STGLeo.h</in>
                  <in>STGLeoSim.h</in>
                  <in>ThirdOrderButterworth.h</in>
                  <in>leo.h</in>
                  <in>leo_squat.h</in>
                  <in>leo_walk.h</in>
                  <in>precisions.h</in>
                </df>
              </df>
              <df name="samplers">
                <in>leo_action_sampler.h</in>
              </df>
              <in>state_machine.h</in>
            </df>
          </df>
          <df name="pid_trajectories">
          </df>
          <df name="src">
            <df name="agents">
              <in>leo_fixed.cpp</in>
              <in>leo_preprogrammed.cpp</in>
              <in>leo_sma.cpp</in>
              <in>leo_squatting_agent.cpp</in>
              <in>leo_sym_wrapper.cpp</in>
              <in>leo_td.cpp</in>
            </df>
            <df name="samplers">
              <in>leo_action_sampler.cpp</in>
            </df>
            <in>LeoBhWalkSym.cpp</in>
            <in>STGLeoSim.cpp</in>
            <in>ThirdOrderButterworth.cpp</in>
            <in>leo.cpp</in>
            <in>leo_squat.cpp</in>
            <in>leo_walk.cpp</in>
            <in>state_machine.cpp</in>
          </df>
        </df>
        <df name="leo2">
          <df name="include">
            <df name="grl">
              <df name="environments">
                <in>leo2.h</in>
              </df>
            </df>
          </df>
          <df name="share">
            <df name="leo2">
            </df>
          </df>
          <df name="src">
            <in>leo2.cpp</in>
          </df>
        </df>
        <df name="llr">
          <df name="include">
            <df name="grl">
              <df name="projectors">
                <in>ann.h</in>
                <in>ertree.h</in>
              </df>
              <df name="representations">
                <in>llr.h</in>
              </df>
            </df>
          </df>
          <df name="src">
            <in>ann.cpp</in>
            <in>ertree.cpp</in>
            <in>llr.cpp</in>
          </df>
        </df>
        <df name="lqr">
          <df name="include">
            <df name="grl">
              <df name="solvers">
                <in>ilqg.h</in>
                <in>lqr.h</in>
              </df>
            </df>
          </df>
          <df name="src">
            <in>ilqg.cpp</in>
            <in>lqr.cpp</in>
          </df>
        </df>
        <df name="matlab">
          <df name="include">
            <df name="grl">
              <df name="matlab">
                <in>convert.h</in>
                <in>memstring.h</in>
              </df>
            </df>
          </df>
          <df name="src">
            <in>convert.cpp</in>
            <in>mex_agent.cpp</in>
            <in>mex_env.cpp</in>
          </df>
        </df>
        <df name="muscod">
          <df name="cfg">
            <df name="inmpc_cartpole">
              <df name="DAT">
              </df>
            </df>
            <df name="inmpc_mhe_cartpole">
              <df name="DAT">
              </df>
            </df>
            <df name="inmpc_mhe_simplest_walker">
              <df name="DAT">
              </df>
            </df>
            <df name="inmpc_simplest_walker">
              <df name="DAT">
              </df>
            </df>
            <df name="nmpc_cartpole">
              <df name="DAT">
              </df>
            </df>
            <df name="nmpc_leo_squat_fb_sl">
              <df name="DAT">
              </df>
            </df>
            <df name="nmpc_leo_squat_fb_sl_fa">
              <df name="DAT">
              </df>
            </df>
            <df name="nmpc_leo_squat_ff_sl">
              <df name="DAT">
              </df>
            </df>
            <df name="nmpc_mhe_cartpole">
              <df name="DAT">
              </df>
            </df>
            <df name="nmpc_mhe_simplest_walker">
              <df name="DAT">
              </df>
            </df>
            <df name="nmpc_simple">
            </df>
            <df name="nmpc_simplest_walker">
              <df name="DAT">
              </df>
            </df>
          </df>
          <df name="cmake">
          </df>
          <df name="include">
            <df name="grl">
              <df name="policies">
                <in>mhe_nmpc.h</in>
                <in>muscod_data.h</in>
                <in>muscod_mhe.h</in>
                <in>muscod_nmpc.h</in>
                <in>muscod_problem.h</in>
                <in>nmpc.h</in>
                <in>nmpc_base.h</in>
                <in>nmpc_mlrti.h</in>
                <in>nmpc_stages.h</in>
                <in>nmpc_th.h</in>
                <in>rbdl_model.h</in>
              </df>
            </df>
          </df>
          <df name="models">
            <df name="mhe_cartpole">
              <df name="include">
                <in>mhe_cartpole.h</in>
                <in>nmpc_cartpole.h</in>
              </df>
              <df name="src">
                <in>mhe_cartpole.cpp</in>
                <in>nmpc_cartpole.cpp</in>
                <in>nmpc_simple.cpp</in>
              </df>
            </df>
            <df name="mhe_simplest_walker">
              <df name="include">
                <in>common_code.h</in>
                <in>common_nmpc.h</in>
              </df>
              <df name="src">
                <in>common_code.cc</in>
                <in>common_nmpc.cc</in>
                <in>nmpc_simplest_walker.cc</in>
              </df>
            </df>
            <df name="nmpc_cartpole">
              <df name="include">
                <in>nmpc_cartpole.h</in>
              </df>
              <df name="src">
                <in>nmpc_cartpole.cpp</in>
              </df>
            </df>
            <df name="nmpc_leo_squat_fb_sl">
              <df name="include">
                <in>LuaBasic.h</in>
                <in>LuaTypes.h</in>
                <in>leomodel.h</in>
              </df>
              <df name="src">
                <in>leomodel.cpp</in>
                <in>nmpc_leo_squat_fb_sl.cpp</in>
              </df>
            </df>
            <df name="nmpc_leo_squat_fb_sl_fa">
              <df name="include">
                <in>LuaBasic.h</in>
                <in>LuaTypes.h</in>
                <in>leomodel.h</in>
              </df>
              <df name="src">
                <in>leomodel.cpp</in>
                <in>nmpc_leo_squat_fb_sl_fa.cpp</in>
              </df>
            </df>
            <df name="nmpc_simple">
              <df name="include">
              </df>
              <df name="src">
                <in>nmpc_simple.cpp</in>
              </df>
            </df>
            <df name="nmpc_simplest_walker">
              <df name="src">
                <in>common_code.cpp</in>
                <in>passive_nmpc_stages.cc</in>
                <in>ssawr_nmpc_stageless.cc</in>
                <in>ssawr_nmpc_stages.cc</in>
                <in>ssiwr_nmpc_stageless.cc</in>
                <in>ssiwr_nmpc_stages.cc</in>
              </df>
            </df>
          </df>
          <df name="src">
            <in>mhe_nmpc.cpp</in>
            <in>nmpc.cpp</in>
            <in>nmpc_base.cpp</in>
            <in>nmpc_mlrti.cpp</in>
            <in>nmpc_stages.cpp</in>
            <in>nmpc_th.cpp</in>
          </df>
        </df>
        <df name="odesim">
          <df name="cfg">
          </df>
          <df name="include">
            <df name="grl">
              <df name="environments">
                <df name="odesim">
                  <in>dialog.h</in>
                  <in>environment.h</in>
                  <in>simulator.h</in>
                </df>
              </df>
            </df>
          </df>
          <df name="src">
            <in>dialog.cpp</in>
            <in>environment.cpp</in>
            <in>simulator.cpp</in>
          </df>
          <df name="textures">
          </df>
          <df name="ui">
          </df>
        </df>
        <df name="rbdl">
          <df name="cfg">
          </df>
          <df name="include">
            <df name="grl">
              <df name="environments">
                <df name="leo">
                  <in>rbdl_leo_model.h</in>
                  <in>rbdl_leo_task.h</in>
                </df>
                <in>LuaBasic.h</in>
                <in>LuaTypes.h</in>
                <in>rbdl.h</in>
              </df>
            </df>
          </df>
          <df name="src">
            <df name="leo">
              <in>rbdl_leo_model.cpp</in>
              <in>rbdl_leo_task.cpp</in>
            </df>
            <in>rbdl.cpp</in>
          </df>
        </df>
        <df name="ros">
          <df name="include">
            <df name="grl">
              <df name="agents">
                <in>ros.h</in>
              </df>
              <df name="environments">
                <in>ros.h</in>
              </df>
            </df>
          </df>
          <df name="src">
            <in>agent.cpp</in>
            <in>environment.cpp</in>
          </df>
        </df>
        <df name="tensorflow">
          <df name="include">
            <df name="grl">
              <df name="agents">
                <in>black_box.h</in>
                <in>communicator.h</in>
                <in>compartmentalized.h</in>
                <in>delayed_td.h</in>
                <in>dyna.h</in>
                <in>filtering.h</in>
                <in>fixed.h</in>
                <in>remapping.h</in>
                <in>replay.h</in>
                <in>sequential.h</in>
                <in>smdp_master.h</in>
                <in>solver.h</in>
                <in>td.h</in>
                <in>voluntary.h</in>
              </df>
              <df name="discretizers">
                <in>peaked.h</in>
                <in>policy.h</in>
                <in>split.h</in>
                <in>uniform.h</in>
              </df>
              <df name="environments">
                <df name="compass_walker">
                  <in>SWModel.h</in>
                  <in>compass_walker.h</in>
                </df>
                <in>acrobot.h</in>
                <in>cart_double_pole.h</in>
                <in>cart_pole.h</in>
                <in>communicator.h</in>
                <in>flyer2d.h</in>
                <in>mountain.h</in>
                <in>multi_agent.h</in>
                <in>observation.h</in>
                <in>pendulum.h</in>
                <in>pinball.h</in>
                <in>puddle.h</in>
                <in>swimmer.h</in>
                <in>windy.h</in>
              </df>
              <df name="experiments">
                <in>approx_test.h</in>
                <in>batch_learning.h</in>
                <in>multi.h</in>
                <in>online_learning.h</in>
                <in>rpc_env.h</in>
              </df>
              <df name="mappings">
                <in>displacement.h</in>
                <in>expanding.h</in>
                <in>filtering.h</in>
                <in>image.h</in>
                <in>multisine.h</in>
                <in>puddle.h</in>
                <in>timeline.h</in>
                <in>value.h</in>
              </df>
              <df name="optimizers">
                <in>rwa.h</in>
              </df>
              <df name="policies">
                <in>action.h</in>
                <in>bounded_q.h</in>
                <in>feed_forward.h</in>
                <in>mcts.h</in>
                <in>noise.h</in>
                <in>parameterized.h</in>
                <in>pid.h</in>
                <in>q.h</in>
                <in>random.h</in>
                <in>state_feedback.h</in>
                <in>ucb.h</in>
                <in>v.h</in>
              </df>
              <df name="predictors">
                <in>ac.h</in>
                <in>advantage.h</in>
                <in>dpg.h</in>
                <in>fqi.h</in>
                <in>ggq.h</in>
                <in>lspi.h</in>
                <in>mbfqi.h</in>
                <in>model.h</in>
                <in>multi.h</in>
                <in>naf.h</in>
                <in>qv.h</in>
                <in>reinforce.h</in>
                <in>sarsa.h</in>
                <in>snapping.h</in>
                <in>td.h</in>
                <in>vi.h</in>
              </df>
              <df name="projections">
                <in>sample.h</in>
              </df>
              <df name="projectors">
                <in>fourier.h</in>
                <in>grid.h</in>
                <in>monomial.h</in>
                <in>multi.h</in>
                <in>normalizing.h</in>
                <in>peaked.h</in>
                <in>rbf.h</in>
                <in>scaling.h</in>
                <in>split.h</in>
                <in>tile_coding.h</in>
              </df>
              <df name="representations">
                <in>additive.h</in>
                <in>ann.h</in>
                <in>communicator.h</in>
                <in>dictionary.h</in>
                <in>dmp.h</in>
                <in>iterative.h</in>
                <in>linear.h</in>
                <in>target.h</in>
              </df>
              <df name="samplers">
                <in>greedy.h</in>
                <in>ornstein_uhlenbeck.h</in>
                <in>pada.h</in>
                <in>softmax.h</in>
              </df>
              <df name="solvers">
                <in>agent.h</in>
                <in>vi.h</in>
              </df>
              <df name="visualizations">
                <in>acrobot.h</in>
                <in>cart_double_pole.h</in>
                <in>cart_pole.h</in>
                <in>compass_walker.h</in>
                <in>flyer2d.h</in>
                <in>pendulum.h</in>
                <in>pinball.h</in>
                <in>swimmer.h</in>
                <in>windy.h</in>
              </df>
              <in>agent.h</in>
              <in>communicator.h</in>
              <in>compat.h</in>
              <in>configurable.h</in>
              <in>configuration.h</in>
              <in>converter.h</in>
              <in>discretizer.h</in>
              <in>environment.h</in>
              <in>experiment.h</in>
              <in>exporter.h</in>
              <in>factory.h</in>
              <in>grl.h</in>
              <in>importer.h</in>
              <in>lua_utils.h</in>
              <in>mapping.h</in>
              <in>mutex.h</in>
              <in>optimizer.h</in>
              <in>policy.h</in>
              <in>predictor.h</in>
              <in>projection.h</in>
              <in>projector.h</in>
              <in>random_generator.h</in>
              <in>representation.h</in>
              <in>sampler.h</in>
              <in>signal.h</in>
              <in>solver.h</in>
              <in>stacktrace.h</in>
              <in>statistics.h</in>
              <in>trace.h</in>
              <in>utils.h</in>
              <in>vector.h</in>
              <in>visualization.h</in>
            </df>
            <df name="yaml-cpp">
              <df name="contrib">
                <in>anchordict.h</in>
                <in>graphbuilder.h</in>
              </df>
              <df name="node">
                <df name="detail">
                  <in>bool_type.h</in>
                  <in>impl.h</in>
                  <in>iterator.h</in>
                  <in>iterator_fwd.h</in>
                  <in>memory.h</in>
                  <in>node.h</in>
                  <in>node_data.h</in>
                  <in>node_iterator.h</in>
                  <in>node_ref.h</in>
                </df>
                <in>convert.h</in>
                <in>emit.h</in>
                <in>impl.h</in>
                <in>iterator.h</in>
                <in>node.h</in>
                <in>parse.h</in>
                <in>ptr.h</in>
                <in>type.h</in>
              </df>
              <in>anchor.h</in>
              <in>binary.h</in>
              <in>dll.h</in>
              <in>emitfromevents.h</in>
              <in>emitter.h</in>
              <in>emitterdef.h</in>
              <in>emittermanip.h</in>
              <in>emitterstyle.h</in>
              <in>eventhandler.h</in>
              <in>exceptions.h</in>
              <in>mark.h</in>
              <in>noncopyable.h</in>
              <in>null.h</in>
              <in>ostream_wrapper.h</in>
              <in>parser.h</in>
              <in>stlemitter.h</in>
              <in>traits.h</in>
              <in>yaml.h</in>
            </df>
          </df>
          <df name="lib">
            <df name="addons">
              <df name="odesim">
                <df name="include">
                  <df name="grl">
                    <df name="environments">
                      <df name="odesim">
                        <in>moc_dialog.cxx</in>
                        <in>moc_environment.cxx</in>
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
            <df name="CMakeFiles">
              <df name="3.5.1">
                <df name="CompilerIdC">
                  <in>CMakeCCompilerId.c</in>
                </df>
                <df name="CompilerIdCXX">
                  <in>CMakeCXXCompilerId.cpp</in>
                </df>
              </df>
              <df name="addon_cma.dir">
                <df name="addons">
                  <df name="cma">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="addon_gl.dir">
                <df name="addons">
                  <df name="gl">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="addon_glut.dir">
                <df name="addons">
                  <df name="glut">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="addon_leo.dir">
                <df name="addons">
                  <df name="leo">
                    <df name="src">
                      <df name="agents">
                      </df>
                      <df name="samplers">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
              <df name="addon_llr.dir">
                <df name="addons">
                  <df name="llr">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="addon_lqr.dir">
                <df name="addons">
                  <df name="lqr">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="addon_odesim.dir">
                <df name="addons">
                  <df name="odesim">
                    <df name="include">
                      <df name="grl">
                        <df name="environments">
                          <df name="odesim">
                          </df>
                        </df>
                      </df>
                    </df>
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="addon_rbdl.dir">
                <df name="addons">
                  <df name="rbdl">
                    <df name="src">
                      <df name="leo">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
              <df name="addon_tensorflow.dir">
              </df>
              <df name="addon_tlm.dir">
                <df name="addons">
                  <df name="tlm">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="addon_zeromq.dir">
                <df name="addons">
                  <df name="zeromq">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="ann.dir">
                <df name="externals">
                  <df name="ann">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="cma.dir">
                <df name="externals">
                  <df name="cma">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="CMakeTmp">
              </df>
              <df name="cppzmq.dir">
                <df name="externals">
                  <df name="cppzmq">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="grl.dir">
                <df name="base">
                  <df name="src">
                    <df name="agents">
                    </df>
                    <df name="discretizers">
                    </df>
                    <df name="environments">
                      <df name="compass_walker">
                      </df>
                    </df>
                    <df name="experiments">
                    </df>
                    <df name="exporters">
                    </df>
                    <df name="importers">
                    </df>
                    <df name="mappings">
                    </df>
                    <df name="optimizers">
                    </df>
                    <df name="policies">
                    </df>
                    <df name="predictors">
                    </df>
                    <df name="projectors">
                    </df>
                    <df name="representations">
                    </df>
                    <df name="samplers">
                    </df>
                    <df name="solvers">
                    </df>
                    <df name="traces">
                    </df>
                    <df name="visualizations">
                    </df>
                  </df>
                </df>
              </df>
              <df name="grld.dir">
                <df name="base">
                  <df name="src">
                  </df>
                </df>
              </df>
              <df name="grlg.dir">
                <df name="base">
                  <df name="src">
                  </df>
                </df>
              </df>
              <df name="grll.dir">
                <df name="base">
                  <df name="src">
                  </df>
                </df>
              </df>
              <df name="grlw.dir">
                <df name="base">
                  <df name="src">
                  </df>
                </df>
              </df>
              <df name="ics.dir">
                <df name="externals">
                  <df name="ics">
                    <df name="src">
                    </df>
                  </df>
                </df>
              </df>
              <df name="Progress">
              </df>
              <df name="protobuffer.dir">
              </df>
              <in>feature_tests.c</in>
              <in>feature_tests.cxx</in>
            </df>
            <df name="externals">
              <df name="dbl">
                <df name="platform">
                  <df name="control">
                    <df name="CMakeFiles">
                      <df name="dbl_control.dir">
                      </df>
                    </df>
                  </df>
                  <df name="gui">
                    <df name="qt">
                      <df name="CMakeFiles">
                        <df name="dbl_qt.dir">
                        </df>
                      </df>
                      <in>moc_GLWidget.cxx</in>
                    </df>
                  </df>
                  <df name="io">
                    <df name="configuration">
                      <df name="CMakeFiles">
                        <df name="dbl_configuration.dir">
                        </df>
                      </df>
                    </df>
                    <df name="logging">
                      <df name="std">
                        <df name="CMakeFiles">
                          <df name="dbl_stdlogging.dir">
                          </df>
                        </df>
                      </df>
                    </df>
                  </df>
                  <df name="simulation">
                    <df name="odesim">
                      <df name="CMakeFiles">
                        <df name="dbl_odesim.dir">
                        </df>
                      </df>
                    </df>
                    <df name="simvis">
                      <df name="CMakeFiles">
                        <df name="dbl_simvis.dir">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
              </df>
              <df name="rbdl">
                <df name="addons">
                  <df name="benchmark">
                    <in>Human36Model.cc</in>
                    <in>Human36Model.h</in>
                    <in>SampleData.h</in>
                    <in>Timer.h</in>
                    <in>benchmark.cc</in>
                    <in>model_generator.cc</in>
                    <in>model_generator.h</in>
                  </df>
                  <df name="luamodel">
                    <in>luamodel.cc</in>
                    <in>luamodel.h</in>
                    <in>luatables.cc</in>
                    <in>luatables.h</in>
                    <in>rbdl_luamodel_util.cc</in>
                  </df>
                  <df name="urdfreader">
                    <df name="CMake">
                    </df>
                    <in>rbdl_urdfreader_util.cc</in>
                    <in>urdfreader.cc</in>
                    <in>urdfreader.h</in>
                  </df>
                </df>
                <df name="build">
                  <df name="addons">
                    <df name="luamodel">
                      <df name="CMakeFiles">
                        <df name="rbdl_luamodel.dir">
                        </df>
                        <df name="rbdl_luamodel_util.dir">
                        </df>
                      </df>
                    </df>
                  </df>
                  <df name="CMakeFiles">
                    <df name="rbdl.dir">
                      <df name="src">
                      </df>
                    </df>
                  </df>
                  <df name="include">
                    <df name="rbdl">
                      <in>rbdl_config.h</in>
                    </df>
                  </df>
                </df>
                <df name="CMake">
                </df>
                <df name="doc">
                  <df name="logo">
                  </df>
                  <df name="notes">
                  </df>
                  <in>Mainpage.h</in>
                  <in>example.h</in>
                  <in>luamodel_example.h</in>
                </df>
                <df name="examples">
                  <df name="luamodel">
                    <in>example_luamodel.cc</in>
                  </df>
                  <df name="simple">
                    <in>example.cc</in>
                  </df>
                  <df name="urdfreader">
                    <in>example_urdfreader.cc</in>
                  </df>
                </df>
                <df name="include">
                  <df name="rbdl">
                    <df name="SimpleMath">
                      <in>SimpleMath.h</in>
                      <in>SimpleMathBlock.h</in>
                      <in>SimpleMathCholesky.h</in>
                      <in>SimpleMathCommaInitializer.h</in>
                      <in>SimpleMathDynamic.h</in>
                      <in>SimpleMathFixed.h</in>
                      <in>SimpleMathGL.h</in>
                      <in>SimpleMathMap.h</in>
                      <in>SimpleMathMixed.h</in>
                      <in>SimpleMathQR.h</in>
                      <in>compileassert.h</in>
                    </df>
                    <in>Body.h</in>
                    <in>Contacts.h</in>
                    <in>Dynamics.h</in>
                    <in>Joint.h</in>
                    <in>Kinematics.h</in>
                    <in>Logging.h</in>
                    <in>Model.h</in>
                    <in>Quaternion.h</in>
                    <in>SpatialAlgebraOperators.h</in>
                    <in>compileassert.h</in>
                    <in>rbdl.h</in>
                    <in>rbdl_eigenmath.h</in>
                    <in>rbdl_math.h</in>
                    <in>rbdl_mathutils.h</in>
                    <in>rbdl_utils.h</in>
                  </df>
                </df>
                <df name="src">
                  <in>Contacts.cc</in>
                  <in>Dynamics.cc</in>
                  <in>Joint.cc</in>
                  <in>Kinematics.cc</in>
                  <in>Logging.cc</in>
                  <in>Model.cc</in>
                  <in>rbdl_mathutils.cc</in>
                  <in>rbdl_utils.cc</in>
                  <in>rbdl_version.cc</in>
                </df>
                <df name="tests">
                  <in>BodyTests.cc</in>
                  <in>CalcAccelerationsTests.cc</in>
                  <in>CalcVelocitiesTests.cc</in>
                  <in>CompositeRigidBodyTests.cc</in>
                  <in>ContactsTests.cc</in>
                  <in>DynamicsTests.cc</in>
                  <in>Fixtures.h</in>
                  <in>FloatingBaseTests.cc</in>
                  <in>Human36Fixture.h</in>
                  <in>ImpulsesTests.cc</in>
                  <in>InverseDynamicsTests.cc</in>
                  <in>KinematicsTests.cc</in>
                  <in>MathTests.cc</in>
                  <in>ModelTests.cc</in>
                  <in>MultiDofTests.cc</in>
                  <in>SparseFactorizationTests.cc</in>
                  <in>SpatialAlgebraTests.cc</in>
                  <in>TwolegModelTests.cc</in>
                  <in>UtilsTests.cc</in>
                  <in>main.cc</in>
                </df>
                <df name="utils">
                  <df name="matlab">
                    <in>FrameTranslation.m</in>
                    <in>VectorCrossMatrix.m</in>
                    <in>ZYXEulerToMatrix.m</in>
                  </df>
                </df>
              </df>
              <df name="yaml-cpp">
                <df name="build">
                  <df name="CMakeFiles">
                    <df name="debuggable.dir">
                    </df>
                    <df name="Export">
                      <df name="_usr">
                        <df name="local">
                          <df name="lib">
                            <df name="cmake">
                              <df name="yaml-cpp">
                              </df>
                            </df>
                          </df>
                        </df>
                      </df>
                    </df>
                    <df name="format.dir">
                    </df>
                    <df name="releasable.dir">
                    </df>
                    <df name="yaml-cpp.dir">
                      <df name="src">
                      </df>
                    </df>
                  </df>
                </df>
                <df name="include">
                  <df name="yaml-cpp">
                    <df name="contrib">
                      <in>anchordict.h</in>
                      <in>graphbuilder.h</in>
                    </df>
                    <df name="node">
                      <df name="detail">
                        <in>bool_type.h</in>
                        <in>impl.h</in>
                        <in>iterator.h</in>
                        <in>iterator_fwd.h</in>
                        <in>memory.h</in>
                        <in>node.h</in>
                        <in>node_data.h</in>
                        <in>node_iterator.h</in>
                        <in>node_ref.h</in>
                      </df>
                      <in>convert.h</in>
                      <in>emit.h</in>
                      <in>impl.h</in>
                      <in>iterator.h</in>
                      <in>node.h</in>
                      <in>parse.h</in>
                      <in>ptr.h</in>
                      <in>type.h</in>
                    </df>
                    <in>anchor.h</in>
                    <in>binary.h</in>
                    <in>dll.h</in>
                    <in>emitfromevents.h</in>
                    <in>emitter.h</in>
                    <in>emitterdef.h</in>
                    <in>emittermanip.h</in>
                    <in>emitterstyle.h</in>
                    <in>eventhandler.h</in>
                    <in>exceptions.h</in>
                    <in>mark.h</in>
                    <in>noncopyable.h</in>
                    <in>null.h</in>
                    <in>ostream_wrapper.h</in>
                    <in>parser.h</in>
                    <in>stlemitter.h</in>
                    <in>traits.h</in>
                    <in>yaml.h</in>
                  </df>
                </df>
                <df name="src">
                  <df name="contrib">
                    <in>graphbuilder.cpp</in>
                    <in>graphbuilderadapter.cpp</in>
                    <in>graphbuilderadapter.h</in>
                  </df>
                  <in>binary.cpp</in>
                  <in>collectionstack.h</in>
                  <in>convert.cpp</in>
                  <in>directives.cpp</in>
                  <in>directives.h</in>
                  <in>emit.cpp</in>
                  <in>emitfromevents.cpp</in>
                  <in>emitter.cpp</in>
                  <in>emitterstate.cpp</in>
                  <in>emitterstate.h</in>
                  <in>emitterutils.cpp</in>
                  <in>emitterutils.h</in>
                  <in>exceptions.cpp</in>
                  <in>exp.cpp</in>
                  <in>exp.h</in>
                  <in>indentation.h</in>
                  <in>memory.cpp</in>
                  <in>node.cpp</in>
                  <in>node_data.cpp</in>
                  <in>nodebuilder.cpp</in>
                  <in>nodebuilder.h</in>
                  <in>nodeevents.cpp</in>
                  <in>nodeevents.h</in>
                  <in>null.cpp</in>
                  <in>ostream_wrapper.cpp</in>
                  <in>parse.cpp</in>
                  <in>parser.cpp</in>
                  <in>ptr_vector.h</in>
                  <in>regex_yaml.cpp</in>
                  <in>regex_yaml.h</in>
                  <in>regeximpl.h</in>
                  <in>scanner.cpp</in>
                  <in>scanner.h</in>
                  <in>scanscalar.cpp</in>
                  <in>scanscalar.h</in>
                  <in>scantag.cpp</in>
                  <in>scantag.h</in>
                  <in>scantoken.cpp</in>
                  <in>setting.h</in>
                  <in>simplekey.cpp</in>
                  <in>singledocparser.cpp</in>
                  <in>singledocparser.h</in>
                  <in>stream.cpp</in>
                  <in>stream.h</in>
                  <in>streamcharsource.h</in>
                  <in>stringsource.h</in>
                  <in>tag.cpp</in>
                  <in>tag.h</in>
                  <in>token.h</in>
                </df>
                <df name="test">
                  <df name="gmock-1.7.0">
                    <df name="build-aux">
                    </df>
                    <df name="fused-src">
                      <df name="gmock">
                        <in>gmock.h</in>
                      </df>
                      <df name="gtest">
                        <in>gtest.h</in>
                      </df>
                      <in>gmock-gtest-all.cc</in>
                      <in>gmock_main.cc</in>
                    </df>
                    <df name="gtest">
                      <df name="build-aux">
                      </df>
                      <df name="cmake">
                      </df>
                      <df name="codegear">
                        <in>gtest_all.cc</in>
                        <in>gtest_link.cc</in>
                      </df>
                      <df name="fused-src">
                        <df name="gtest">
                          <in>gtest-all.cc</in>
                          <in>gtest.h</in>
                          <in>gtest_main.cc</in>
                        </df>
                      </df>
                      <df name="include">
                        <df name="gtest">
                          <df name="internal">
                            <in>gtest-death-test-internal.h</in>
                            <in>gtest-filepath.h</in>
                            <in>gtest-internal.h</in>
                            <in>gtest-linked_ptr.h</in>
                            <in>gtest-param-util-generated.h</in>
                            <in>gtest-param-util.h</in>
                            <in>gtest-port.h</in>
                            <in>gtest-string.h</in>
                            <in>gtest-tuple.h</in>
                            <in>gtest-type-util.h</in>
                          </df>
                          <in>gtest-death-test.h</in>
                          <in>gtest-message.h</in>
                          <in>gtest-param-test.h</in>
                          <in>gtest-printers.h</in>
                          <in>gtest-spi.h</in>
                          <in>gtest-test-part.h</in>
                          <in>gtest-typed-test.h</in>
                          <in>gtest.h</in>
                          <in>gtest_pred_impl.h</in>
                          <in>gtest_prod.h</in>
                        </df>
                      </df>
                      <df name="m4">
                      </df>
                      <df name="make">
                      </df>
                      <df name="msvc">
                      </df>
                      <df name="samples">
                        <in>prime_tables.h</in>
                        <in>sample1.cc</in>
                        <in>sample1.h</in>
                        <in>sample10_unittest.cc</in>
                        <in>sample1_unittest.cc</in>
                        <in>sample2.cc</in>
                        <in>sample2.h</in>
                        <in>sample2_unittest.cc</in>
                        <in>sample3-inl.h</in>
                        <in>sample3_unittest.cc</in>
                        <in>sample4.cc</in>
                        <in>sample4.h</in>
                        <in>sample4_unittest.cc</in>
                        <in>sample5_unittest.cc</in>
                        <in>sample6_unittest.cc</in>
                        <in>sample7_unittest.cc</in>
                        <in>sample8_unittest.cc</in>
                        <in>sample9_unittest.cc</in>
                      </df>
                      <df name="scripts">
                        <df name="test">
                        </df>
                      </df>
                      <df name="src">
                        <in>gtest-all.cc</in>
                        <in>gtest-death-test.cc</in>
                        <in>gtest-filepath.cc</in>
                        <in>gtest-internal-inl.h</in>
                        <in>gtest-port.cc</in>
                        <in>gtest-printers.cc</in>
                        <in>gtest-test-part.cc</in>
                        <in>gtest-typed-test.cc</in>
                        <in>gtest.cc</in>
                        <in>gtest_main.cc</in>
                      </df>
                      <df name="test">
                        <in>gtest-death-test_ex_test.cc</in>
                        <in>gtest-death-test_test.cc</in>
                        <in>gtest-filepath_test.cc</in>
                        <in>gtest-linked_ptr_test.cc</in>
                        <in>gtest-listener_test.cc</in>
                        <in>gtest-message_test.cc</in>
                        <in>gtest-options_test.cc</in>
                        <in>gtest-param-test2_test.cc</in>
                        <in>gtest-param-test_test.cc</in>
                        <in>gtest-param-test_test.h</in>
                        <in>gtest-port_test.cc</in>
                        <in>gtest-printers_test.cc</in>
                        <in>gtest-test-part_test.cc</in>
                        <in>gtest-tuple_test.cc</in>
                        <in>gtest-typed-test2_test.cc</in>
                        <in>gtest-typed-test_test.cc</in>
                        <in>gtest-typed-test_test.h</in>
                        <in>gtest-unittest-api_test.cc</in>
                        <in>gtest_all_test.cc</in>
                        <in>gtest_break_on_failure_unittest_.cc</in>
                        <in>gtest_catch_exceptions_test_.cc</in>
                        <in>gtest_color_test_.cc</in>
                        <in>gtest_env_var_test_.cc</in>
                        <in>gtest_environment_test.cc</in>
                        <in>gtest_filter_unittest_.cc</in>
                        <in>gtest_help_test_.cc</in>
                        <in>gtest_list_tests_unittest_.cc</in>
                        <in>gtest_main_unittest.cc</in>
                        <in>gtest_no_test_unittest.cc</in>
                        <in>gtest_output_test_.cc</in>
                        <in>gtest_pred_impl_unittest.cc</in>
                        <in>gtest_premature_exit_test.cc</in>
                        <in>gtest_prod_test.cc</in>
                        <in>gtest_repeat_test.cc</in>
                        <in>gtest_shuffle_test_.cc</in>
                        <in>gtest_sole_header_test.cc</in>
                        <in>gtest_stress_test.cc</in>
                        <in>gtest_throw_on_failure_ex_test.cc</in>
                        <in>gtest_throw_on_failure_test_.cc</in>
                        <in>gtest_uninitialized_test_.cc</in>
                        <in>gtest_unittest.cc</in>
                        <in>gtest_xml_outfile1_test_.cc</in>
                        <in>gtest_xml_outfile2_test_.cc</in>
                        <in>gtest_xml_output_unittest_.cc</in>
                        <in>production.cc</in>
                        <in>production.h</in>
                      </df>
                      <df name="xcode">
                        <df name="Config">
                        </df>
                        <df name="gtest.xcodeproj">
                        </df>
                        <df name="Resources">
                        </df>
                        <df name="Samples">
                          <df name="FrameworkSample">
                            <df name="WidgetFramework.xcodeproj">
                            </df>
                            <in>widget.cc</in>
                            <in>widget.h</in>
                            <in>widget_test.cc</in>
                          </df>
                        </df>
                        <df name="Scripts">
                        </df>
                      </df>
                    </df>
                    <df name="include">
                      <df name="gmock">
                        <df name="internal">
                          <in>gmock-generated-internal-utils.h</in>
                          <in>gmock-internal-utils.h</in>
                          <in>gmock-port.h</in>
                        </df>
                        <in>gmock-actions.h</in>
                        <in>gmock-cardinalities.h</in>
                        <in>gmock-generated-actions.h</in>
                        <in>gmock-generated-function-mockers.h</in>
                        <in>gmock-generated-matchers.h</in>
                        <in>gmock-generated-nice-strict.h</in>
                        <in>gmock-matchers.h</in>
                        <in>gmock-more-actions.h</in>
                        <in>gmock-more-matchers.h</in>
                        <in>gmock-spec-builders.h</in>
                        <in>gmock.h</in>
                      </df>
                    </df>
                    <df name="make">
                    </df>
                    <df name="msvc">
                      <df name="2005">
                      </df>
                      <df name="2010">
                      </df>
                    </df>
                    <df name="scripts">
                      <df name="generator">
                        <df name="cpp">
                        </df>
                      </df>
                    </df>
                    <df name="src">
                      <in>gmock-all.cc</in>
                      <in>gmock-cardinalities.cc</in>
                      <in>gmock-internal-utils.cc</in>
                      <in>gmock-matchers.cc</in>
                      <in>gmock-spec-builders.cc</in>
                      <in>gmock.cc</in>
                      <in>gmock_main.cc</in>
                    </df>
                    <df name="test">
                      <in>gmock-actions_test.cc</in>
                      <in>gmock-cardinalities_test.cc</in>
                      <in>gmock-generated-actions_test.cc</in>
                      <in>gmock-generated-function-mockers_test.cc</in>
                      <in>gmock-generated-internal-utils_test.cc</in>
                      <in>gmock-generated-matchers_test.cc</in>
                      <in>gmock-internal-utils_test.cc</in>
                      <in>gmock-matchers_test.cc</in>
                      <in>gmock-more-actions_test.cc</in>
                      <in>gmock-nice-strict_test.cc</in>
                      <in>gmock-port_test.cc</in>
                      <in>gmock-spec-builders_test.cc</in>
                      <in>gmock_all_test.cc</in>
                      <in>gmock_ex_test.cc</in>
                      <in>gmock_leak_test_.cc</in>
                      <in>gmock_link2_test.cc</in>
                      <in>gmock_link_test.cc</in>
                      <in>gmock_link_test.h</in>
                      <in>gmock_output_test_.cc</in>
                      <in>gmock_stress_test.cc</in>
                      <in>gmock_test.cc</in>
                    </df>
                  </df>
                  <df name="integration">
                    <in>emitter_test.cpp</in>
                    <in>encoding_test.cpp</in>
                    <in>gen_emitter_test.cpp</in>
                    <in>handler_spec_test.cpp</in>
                    <in>handler_test.cpp</in>
                    <in>load_node_test.cpp</in>
                    <in>node_spec_test.cpp</in>
                  </df>
                  <df name="node">
                    <in>node_test.cpp</in>
                  </df>
                  <in>handler_test.h</in>
                  <in>main.cpp</in>
                  <in>mock_event_handler.h</in>
                  <in>ostream_wrapper_test.cpp</in>
                  <in>regex_test.cpp</in>
                  <in>specexamples.h</in>
                </df>
                <df name="util">
                  <in>api.cpp</in>
                  <in>parse.cpp</in>
                  <in>read.cpp</in>
                  <in>sandbox.cpp</in>
                </df>
              </df>
            </df>
            <in>drl_messages.pb.cc</in>
            <in>drl_messages.pb.h</in>
            <in>ui_odesim_dialog.h</in>
          </df>
          <df name="share">
          </df>
          <df name="src">
            <in>representation.cpp</in>
            <in>representation.h</in>
          </df>
        </df>
        <df name="tlm">
          <df name="include">
            <df name="grl">
              <df name="environments">
                <in>tlm.h</in>
              </df>
            </df>
          </df>
          <df name="src">
            <in>tlm.cpp</in>
          </df>
        </df>
        <df name="zeromq">
          <df name="cmake">
          </df>
          <df name="include">
            <df name="grl">
              <in>zeromq.h</in>
            </df>
          </df>
          <df name="protobuffer">
          </df>
          <df name="src">
            <in>zeromq.cpp</in>
          </df>
        </df>
      </df>
      <df name="base">
        <df name="include">
          <df name="grl">
            <df name="agents">
              <in>black_box.h</in>
              <in>communicator.h</in>
              <in>compartmentalized.h</in>
              <in>delayed_td.h</in>
              <in>dyna.h</in>
              <in>filtering.h</in>
              <in>fixed.h</in>
              <in>remapping.h</in>
              <in>replay.h</in>
              <in>sequential.h</in>
              <in>smdp_master.h</in>
              <in>solver.h</in>
              <in>td.h</in>
              <in>voluntary.h</in>
            </df>
            <df name="discretizers">
              <in>peaked.h</in>
              <in>policy.h</in>
              <in>split.h</in>
              <in>uniform.h</in>
            </df>
            <df name="environments">
              <df name="compass_walker">
                <in>SWModel.h</in>
                <in>compass_walker.h</in>
              </df>
              <in>acrobot.h</in>
              <in>cart_double_pole.h</in>
              <in>cart_pole.h</in>
              <in>communicator.h</in>
              <in>flyer2d.h</in>
              <in>mountain.h</in>
              <in>multi_agent.h</in>
              <in>observation.h</in>
              <in>pendulum.h</in>
              <in>pinball.h</in>
              <in>puddle.h</in>
              <in>swimmer.h</in>
              <in>windy.h</in>
            </df>
            <df name="experiments">
              <in>approx_test.h</in>
              <in>batch_learning.h</in>
              <in>multi.h</in>
              <in>online_learning.h</in>
              <in>rpc_env.h</in>
            </df>
            <df name="mappings">
              <in>displacement.h</in>
              <in>expanding.h</in>
              <in>filtering.h</in>
              <in>image.h</in>
              <in>multisine.h</in>
              <in>puddle.h</in>
              <in>timeline.h</in>
              <in>value.h</in>
            </df>
            <df name="optimizers">
              <in>rwa.h</in>
            </df>
            <df name="policies">
              <in>action.h</in>
              <in>bounded_q.h</in>
              <in>feed_forward.h</in>
              <in>mcts.h</in>
              <in>noise.h</in>
              <in>parameterized.h</in>
              <in>pid.h</in>
              <in>q.h</in>
              <in>random.h</in>
              <in>state_feedback.h</in>
              <in>ucb.h</in>
              <in>v.h</in>
            </df>
            <df name="predictors">
              <in>ac.h</in>
              <in>advantage.h</in>
              <in>dpg.h</in>
              <in>fqi.h</in>
              <in>ggq.h</in>
              <in>lspi.h</in>
              <in>mbfqi.h</in>
              <in>model.h</in>
              <in>multi.h</in>
              <in>naf.h</in>
              <in>qv.h</in>
              <in>reinforce.h</in>
              <in>sarsa.h</in>
              <in>snapping.h</in>
              <in>td.h</in>
              <in>vi.h</in>
            </df>
            <df name="projections">
              <in>sample.h</in>
            </df>
            <df name="projectors">
              <in>fourier.h</in>
              <in>grid.h</in>
              <in>monomial.h</in>
              <in>multi.h</in>
              <in>normalizing.h</in>
              <in>peaked.h</in>
              <in>rbf.h</in>
              <in>scaling.h</in>
              <in>split.h</in>
              <in>tile_coding.h</in>
            </df>
            <df name="representations">
              <in>additive.h</in>
              <in>ann.h</in>
              <in>communicator.h</in>
              <in>dictionary.h</in>
              <in>dmp.h</in>
              <in>iterative.h</in>
              <in>linear.h</in>
              <in>target.h</in>
            </df>
            <df name="samplers">
              <in>greedy.h</in>
              <in>ornstein_uhlenbeck.h</in>
              <in>pada.h</in>
              <in>softmax.h</in>
            </df>
            <df name="solvers">
              <in>agent.h</in>
              <in>vi.h</in>
            </df>
            <df name="visualizations">
              <in>acrobot.h</in>
              <in>cart_double_pole.h</in>
              <in>cart_pole.h</in>
              <in>compass_walker.h</in>
              <in>flyer2d.h</in>
              <in>pendulum.h</in>
              <in>pinball.h</in>
              <in>swimmer.h</in>
              <in>windy.h</in>
            </df>
            <in>agent.h</in>
            <in>communicator.h</in>
            <in>compat.h</in>
            <in>configurable.h</in>
            <in>configuration.h</in>
            <in>converter.h</in>
            <in>discretizer.h</in>
            <in>environment.h</in>
            <in>experiment.h</in>
            <in>exporter.h</in>
            <in>factory.h</in>
            <in>grl.h</in>
            <in>importer.h</in>
            <in>lua_utils.h</in>
            <in>mapping.h</in>
            <in>mutex.h</in>
            <in>optimizer.h</in>
            <in>policy.h</in>
            <in>predictor.h</in>
            <in>projection.h</in>
            <in>projector.h</in>
            <in>random_generator.h</in>
            <in>representation.h</in>
            <in>sampler.h</in>
            <in>signal.h</in>
            <in>solver.h</in>
            <in>stacktrace.h</in>
            <in>statistics.h</in>
            <in>trace.h</in>
            <in>utils.h</in>
            <in>vector.h</in>
            <in>visualization.h</in>
          </df>
        </df>
        <df name="src">
          <df name="agents">
            <in>black_box.cpp</in>
            <in>communicator.cpp</in>
            <in>compartmentalized.cpp</in>
            <in>delayed_td.cpp</in>
            <in>dyna.cpp</in>
            <in>filtering.cpp</in>
            <in>fixed.cpp</in>
            <in>remapping.cpp</in>
            <in>replay.cpp</in>
            <in>sequential.cpp</in>
            <in>smdp_master.cpp</in>
            <in>solver.cpp</in>
            <in>td.cpp</in>
            <in>voluntary.cpp</in>
          </df>
          <df name="discretizers">
            <in>peaked.cpp</in>
            <in>policy.cpp</in>
            <in>split.cpp</in>
            <in>uniform.cpp</in>
          </df>
          <df name="environments">
            <df name="compass_walker">
              <in>SWModel.cpp</in>
              <in>compass_walker.cpp</in>
            </df>
            <in>acrobot.cpp</in>
            <in>cart_double_pole.cpp</in>
            <in>cart_pole.cpp</in>
            <in>communicator.cpp</in>
            <in>flyer2d.cpp</in>
            <in>modeled.cpp</in>
            <in>mountain.cpp</in>
            <in>multi_agent.cpp</in>
            <in>noise.cpp</in>
            <in>observation.cpp</in>
            <in>pendulum.cpp</in>
            <in>pinball.cpp</in>
            <in>puddle.cpp</in>
            <in>sandbox.cpp</in>
            <in>shaping.cpp</in>
            <in>swimmer.cpp</in>
            <in>windy.cpp</in>
          </df>
          <df name="experiments">
            <in>approx_test.cpp</in>
            <in>batch_learning.cpp</in>
            <in>multi.cpp</in>
            <in>online_learning.cpp</in>
            <in>rpc_env.cpp</in>
          </df>
          <df name="exporters">
            <in>csv.cpp</in>
          </df>
          <df name="importers">
            <in>csv.cpp</in>
          </df>
          <df name="mappings">
            <in>displacement.cpp</in>
            <in>expanding.cpp</in>
            <in>filtering.cpp</in>
            <in>image.cpp</in>
            <in>multisine.cpp</in>
            <in>puddle.cpp</in>
            <in>timeline.cpp</in>
            <in>value.cpp</in>
          </df>
          <df name="optimizers">
            <in>rwa.cpp</in>
          </df>
          <df name="policies">
            <in>action.cpp</in>
            <in>bounded_q.cpp</in>
            <in>feed_forward.cpp</in>
            <in>mcts.cpp</in>
            <in>noise.cpp</in>
            <in>parameterized.cpp</in>
            <in>pid.cpp</in>
            <in>q.cpp</in>
            <in>random.cpp</in>
            <in>state_feedback.cpp</in>
            <in>ucb.cpp</in>
            <in>v.cpp</in>
          </df>
          <df name="predictors">
            <in>ac.cpp</in>
            <in>advantage.cpp</in>
            <in>dpg.cpp</in>
            <in>fqi.cpp</in>
            <in>ggq.cpp</in>
            <in>lspi.cpp</in>
            <in>mbfqi.cpp</in>
            <in>model.cpp</in>
            <in>multi.cpp</in>
            <in>naf.cpp</in>
            <in>qv.cpp</in>
            <in>reinforce.cpp</in>
            <in>sarsa.cpp</in>
            <in>snapping.cpp</in>
            <in>td.cpp</in>
            <in>vi.cpp</in>
          </df>
          <df name="projectors">
            <in>fourier.cpp</in>
            <in>grid.cpp</in>
            <in>identity.cpp</in>
            <in>monomial.cpp</in>
            <in>multi.cpp</in>
            <in>normalizing.cpp</in>
            <in>peaked.cpp</in>
            <in>rbf.cpp</in>
            <in>scaling.cpp</in>
            <in>split.cpp</in>
            <in>tile_coding.cpp</in>
          </df>
          <df name="representations">
            <in>additive.cpp</in>
            <in>ann.cpp</in>
            <in>communicator.cpp</in>
            <in>dictionary.cpp</in>
            <in>dmp.cpp</in>
            <in>iterative.cpp</in>
            <in>linear.cpp</in>
            <in>target.cpp</in>
          </df>
          <df name="samplers">
            <in>greedy.cpp</in>
            <in>ornstein_uhlenbeck.cpp</in>
            <in>pada.cpp</in>
            <in>softmax.cpp</in>
          </df>
          <df name="solvers">
            <in>agent.cpp</in>
            <in>vi.cpp</in>
          </df>
          <df name="traces">
            <in>enumerated.cpp</in>
          </df>
          <df name="visualizations">
            <in>acrobot.cpp</in>
            <in>cart_double_pole.cpp</in>
            <in>cart_pole.cpp</in>
            <in>compass_walker.cpp</in>
            <in>flyer2d.cpp</in>
            <in>pendulum.cpp</in>
            <in>pinball.cpp</in>
            <in>swimmer.cpp</in>
            <in>windy.cpp</in>
          </df>
          <in>configurable.cpp</in>
          <in>deployer.cpp</in>
          <in>grl.cpp</in>
          <in>lua_deployer.cpp</in>
          <in>predictor.cpp</in>
          <in>random_generator.cpp</in>
          <in>requestgen.cpp</in>
          <in>signal.cpp</in>
          <in>statistics.cpp</in>
          <in>worker.cpp</in>
        </df>
      </df>
      <df name="bin">
        <in>grl_rpc_env.m</in>
        <in>grl_test.m</in>
      </df>
      <df name="build">
        <df name="addons">
          <df name="odesim">
            <df name="include">
              <df name="grl">
                <df name="environments">
                  <df name="odesim">
                    <in>moc_dialog.cxx</in>
                    <in>moc_environment.cxx</in>
                  </df>
                </df>
              </df>
            </df>
          </df>
        </df>
        <df name="CMakeFiles">
          <df name="3.5.1">
            <df name="CompilerIdC">
              <in>CMakeCCompilerId.c</in>
            </df>
            <df name="CompilerIdCXX">
              <in>CMakeCXXCompilerId.cpp</in>
            </df>
          </df>
          <df name="addon_cma.dir">
            <df name="addons">
              <df name="cma">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="addon_gl.dir">
            <df name="addons">
              <df name="gl">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="addon_glut.dir">
            <df name="addons">
              <df name="glut">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="addon_leo.dir">
            <df name="addons">
              <df name="leo">
                <df name="src">
                  <df name="agents">
                  </df>
                  <df name="samplers">
                  </df>
                </df>
              </df>
            </df>
          </df>
          <df name="addon_llr.dir">
            <df name="addons">
              <df name="llr">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="addon_lqr.dir">
            <df name="addons">
              <df name="lqr">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="addon_odesim.dir">
            <df name="addons">
              <df name="odesim">
                <df name="include">
                  <df name="grl">
                    <df name="environments">
                      <df name="odesim">
                      </df>
                    </df>
                  </df>
                </df>
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="addon_rbdl.dir">
            <df name="addons">
              <df name="rbdl">
                <df name="src">
                  <df name="leo">
                  </df>
                </df>
              </df>
            </df>
          </df>
          <df name="addon_tensorflow.dir">
          </df>
          <df name="addon_tlm.dir">
            <df name="addons">
              <df name="tlm">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="addon_zeromq.dir">
            <df name="addons">
              <df name="zeromq">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="ann.dir">
            <df name="externals">
              <df name="ann">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="cma.dir">
            <df name="externals">
              <df name="cma">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="CMakeTmp">
          </df>
          <df name="cppzmq.dir">
            <df name="externals">
              <df name="cppzmq">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="grl.dir">
            <df name="base">
              <df name="src">
                <df name="agents">
                </df>
                <df name="discretizers">
                </df>
                <df name="environments">
                  <df name="compass_walker">
                  </df>
                </df>
                <df name="experiments">
                </df>
                <df name="exporters">
                </df>
                <df name="importers">
                </df>
                <df name="mappings">
                </df>
                <df name="optimizers">
                </df>
                <df name="policies">
                </df>
                <df name="predictors">
                </df>
                <df name="projectors">
                </df>
                <df name="representations">
                </df>
                <df name="samplers">
                </df>
                <df name="solvers">
                </df>
                <df name="traces">
                </df>
                <df name="visualizations">
                </df>
              </df>
            </df>
          </df>
          <df name="grld.dir">
            <df name="base">
              <df name="src">
              </df>
            </df>
          </df>
          <df name="grlg.dir">
            <df name="base">
              <df name="src">
              </df>
            </df>
          </df>
          <df name="grll.dir">
            <df name="base">
              <df name="src">
              </df>
            </df>
          </df>
          <df name="grlw.dir">
            <df name="base">
              <df name="src">
              </df>
            </df>
          </df>
          <df name="ics.dir">
            <df name="externals">
              <df name="ics">
                <df name="src">
                </df>
              </df>
            </df>
          </df>
          <df name="protobuffer.dir">
          </df>
          <in>feature_tests.c</in>
          <in>feature_tests.cxx</in>
        </df>
        <df name="externals">
          <df name="dbl">
            <df name="platform">
              <df name="control">
                <df name="CMakeFiles">
                  <df name="dbl_control.dir">
                  </df>
                </df>
              </df>
              <df name="gui">
                <df name="qt">
                  <df name="CMakeFiles">
                    <df name="dbl_qt.dir">
                    </df>
                  </df>
                  <in>moc_GLWidget.cxx</in>
                </df>
              </df>
              <df name="io">
                <df name="configuration">
                  <df name="CMakeFiles">
                    <df name="dbl_configuration.dir">
                    </df>
                  </df>
                </df>
                <df name="logging">
                  <df name="std">
                    <df name="CMakeFiles">
                      <df name="dbl_stdlogging.dir">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
              <df name="simulation">
                <df name="odesim">
                  <df name="CMakeFiles">
                    <df name="dbl_odesim.dir">
                    </df>
                  </df>
                </df>
                <df name="simvis">
                  <df name="CMakeFiles">
                    <df name="dbl_simvis.dir">
                    </df>
                  </df>
                </df>
              </df>
            </df>
          </df>
          <df name="rbdl">
            <df name="addons">
              <df name="benchmark">
                <in>Human36Model.cc</in>
                <in>Human36Model.h</in>
                <in>SampleData.h</in>
                <in>Timer.h</in>
                <in>benchmark.cc</in>
                <in>model_generator.cc</in>
                <in>model_generator.h</in>
              </df>
              <df name="luamodel">
                <in>luamodel.cc</in>
                <in>luamodel.h</in>
                <in>luatables.cc</in>
                <in>luatables.h</in>
                <in>rbdl_luamodel_util.cc</in>
              </df>
              <df name="urdfreader">
                <df name="CMake">
                </df>
                <in>rbdl_urdfreader_util.cc</in>
                <in>urdfreader.cc</in>
                <in>urdfreader.h</in>
              </df>
            </df>
            <df name="build">
              <df name="addons">
                <df name="luamodel">
                  <df name="CMakeFiles">
                    <df name="rbdl_luamodel.dir">
                    </df>
                    <df name="rbdl_luamodel_util.dir">
                    </df>
                  </df>
                </df>
              </df>
              <df name="CMakeFiles">
                <df name="rbdl.dir">
                  <df name="src">
                  </df>
                </df>
              </df>
              <df name="include">
                <df name="rbdl">
                  <in>rbdl_config.h</in>
                </df>
              </df>
            </df>
            <df name="CMake">
            </df>
            <df name="doc">
              <df name="logo">
              </df>
              <df name="notes">
              </df>
              <in>Mainpage.h</in>
              <in>example.h</in>
              <in>luamodel_example.h</in>
            </df>
            <df name="examples">
              <df name="luamodel">
                <in>example_luamodel.cc</in>
              </df>
              <df name="simple">
                <in>example.cc</in>
              </df>
              <df name="urdfreader">
                <in>example_urdfreader.cc</in>
              </df>
            </df>
            <df name="include">
              <df name="rbdl">
                <df name="SimpleMath">
                  <in>SimpleMath.h</in>
                  <in>SimpleMathBlock.h</in>
                  <in>SimpleMathCholesky.h</in>
                  <in>SimpleMathCommaInitializer.h</in>
                  <in>SimpleMathDynamic.h</in>
                  <in>SimpleMathFixed.h</in>
                  <in>SimpleMathGL.h</in>
                  <in>SimpleMathMap.h</in>
                  <in>SimpleMathMixed.h</in>
                  <in>SimpleMathQR.h</in>
                  <in>compileassert.h</in>
                </df>
                <in>Body.h</in>
                <in>Contacts.h</in>
                <in>Dynamics.h</in>
                <in>Joint.h</in>
                <in>Kinematics.h</in>
                <in>Logging.h</in>
                <in>Model.h</in>
                <in>Quaternion.h</in>
                <in>SpatialAlgebraOperators.h</in>
                <in>compileassert.h</in>
                <in>rbdl.h</in>
                <in>rbdl_eigenmath.h</in>
                <in>rbdl_math.h</in>
                <in>rbdl_mathutils.h</in>
                <in>rbdl_utils.h</in>
              </df>
            </df>
            <df name="src">
              <in>Contacts.cc</in>
              <in>Dynamics.cc</in>
              <in>Joint.cc</in>
              <in>Kinematics.cc</in>
              <in>Logging.cc</in>
              <in>Model.cc</in>
              <in>rbdl_mathutils.cc</in>
              <in>rbdl_utils.cc</in>
              <in>rbdl_version.cc</in>
            </df>
            <df name="tests">
              <in>BodyTests.cc</in>
              <in>CalcAccelerationsTests.cc</in>
              <in>CalcVelocitiesTests.cc</in>
              <in>CompositeRigidBodyTests.cc</in>
              <in>ContactsTests.cc</in>
              <in>DynamicsTests.cc</in>
              <in>Fixtures.h</in>
              <in>FloatingBaseTests.cc</in>
              <in>Human36Fixture.h</in>
              <in>ImpulsesTests.cc</in>
              <in>InverseDynamicsTests.cc</in>
              <in>KinematicsTests.cc</in>
              <in>MathTests.cc</in>
              <in>ModelTests.cc</in>
              <in>MultiDofTests.cc</in>
              <in>SparseFactorizationTests.cc</in>
              <in>SpatialAlgebraTests.cc</in>
              <in>TwolegModelTests.cc</in>
              <in>UtilsTests.cc</in>
              <in>main.cc</in>
            </df>
            <df name="utils">
              <df name="matlab">
                <in>FrameTranslation.m</in>
                <in>VectorCrossMatrix.m</in>
                <in>ZYXEulerToMatrix.m</in>
              </df>
            </df>
          </df>
          <df name="yaml-cpp">
            <df name="build">
              <df name="CMakeFiles">
                <df name="debuggable.dir">
                </df>
                <df name="Export">
                  <df name="_usr">
                    <df name="local">
                      <df name="lib">
                        <df name="cmake">
                          <df name="yaml-cpp">
                          </df>
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="format.dir">
                </df>
                <df name="releasable.dir">
                </df>
                <df name="yaml-cpp.dir">
                  <df name="src">
                  </df>
                </df>
              </df>
            </df>
            <df name="include">
              <df name="yaml-cpp">
                <df name="contrib">
                  <in>anchordict.h</in>
                  <in>graphbuilder.h</in>
                </df>
                <df name="node">
                  <df name="detail">
                    <in>bool_type.h</in>
                    <in>impl.h</in>
                    <in>iterator.h</in>
                    <in>iterator_fwd.h</in>
                    <in>memory.h</in>
                    <in>node.h</in>
                    <in>node_data.h</in>
                    <in>node_iterator.h</in>
                    <in>node_ref.h</in>
                  </df>
                  <in>convert.h</in>
                  <in>emit.h</in>
                  <in>impl.h</in>
                  <in>iterator.h</in>
                  <in>node.h</in>
                  <in>parse.h</in>
                  <in>ptr.h</in>
                  <in>type.h</in>
                </df>
                <in>anchor.h</in>
                <in>binary.h</in>
                <in>dll.h</in>
                <in>emitfromevents.h</in>
                <in>emitter.h</in>
                <in>emitterdef.h</in>
                <in>emittermanip.h</in>
                <in>emitterstyle.h</in>
                <in>eventhandler.h</in>
                <in>exceptions.h</in>
                <in>mark.h</in>
                <in>noncopyable.h</in>
                <in>null.h</in>
                <in>ostream_wrapper.h</in>
                <in>parser.h</in>
                <in>stlemitter.h</in>
                <in>traits.h</in>
                <in>yaml.h</in>
              </df>
            </df>
            <df name="src">
              <df name="contrib">
                <in>graphbuilder.cpp</in>
                <in>graphbuilderadapter.cpp</in>
                <in>graphbuilderadapter.h</in>
              </df>
              <in>binary.cpp</in>
              <in>collectionstack.h</in>
              <in>convert.cpp</in>
              <in>directives.cpp</in>
              <in>directives.h</in>
              <in>emit.cpp</in>
              <in>emitfromevents.cpp</in>
              <in>emitter.cpp</in>
              <in>emitterstate.cpp</in>
              <in>emitterstate.h</in>
              <in>emitterutils.cpp</in>
              <in>emitterutils.h</in>
              <in>exceptions.cpp</in>
              <in>exp.cpp</in>
              <in>exp.h</in>
              <in>indentation.h</in>
              <in>memory.cpp</in>
              <in>node.cpp</in>
              <in>node_data.cpp</in>
              <in>nodebuilder.cpp</in>
              <in>nodebuilder.h</in>
              <in>nodeevents.cpp</in>
              <in>nodeevents.h</in>
              <in>null.cpp</in>
              <in>ostream_wrapper.cpp</in>
              <in>parse.cpp</in>
              <in>parser.cpp</in>
              <in>ptr_vector.h</in>
              <in>regex_yaml.cpp</in>
              <in>regex_yaml.h</in>
              <in>regeximpl.h</in>
              <in>scanner.cpp</in>
              <in>scanner.h</in>
              <in>scanscalar.cpp</in>
              <in>scanscalar.h</in>
              <in>scantag.cpp</in>
              <in>scantag.h</in>
              <in>scantoken.cpp</in>
              <in>setting.h</in>
              <in>simplekey.cpp</in>
              <in>singledocparser.cpp</in>
              <in>singledocparser.h</in>
              <in>stream.cpp</in>
              <in>stream.h</in>
              <in>streamcharsource.h</in>
              <in>stringsource.h</in>
              <in>tag.cpp</in>
              <in>tag.h</in>
              <in>token.h</in>
            </df>
            <df name="test">
              <df name="gmock-1.7.0">
                <df name="build-aux">
                </df>
                <df name="fused-src">
                  <df name="gmock">
                    <in>gmock.h</in>
                  </df>
                  <df name="gtest">
                    <in>gtest.h</in>
                  </df>
                  <in>gmock-gtest-all.cc</in>
                  <in>gmock_main.cc</in>
                </df>
                <df name="gtest">
                  <df name="build-aux">
                  </df>
                  <df name="cmake">
                  </df>
                  <df name="codegear">
                    <in>gtest_all.cc</in>
                    <in>gtest_link.cc</in>
                  </df>
                  <df name="fused-src">
                    <df name="gtest">
                      <in>gtest-all.cc</in>
                      <in>gtest.h</in>
                      <in>gtest_main.cc</in>
                    </df>
                  </df>
                  <df name="include">
                    <df name="gtest">
                      <df name="internal">
                        <in>gtest-death-test-internal.h</in>
                        <in>gtest-filepath.h</in>
                        <in>gtest-internal.h</in>
                        <in>gtest-linked_ptr.h</in>
                        <in>gtest-param-util-generated.h</in>
                        <in>gtest-param-util.h</in>
                        <in>gtest-port.h</in>
                        <in>gtest-string.h</in>
                        <in>gtest-tuple.h</in>
                        <in>gtest-type-util.h</in>
                      </df>
                      <in>gtest-death-test.h</in>
                      <in>gtest-message.h</in>
                      <in>gtest-param-test.h</in>
                      <in>gtest-printers.h</in>
                      <in>gtest-spi.h</in>
                      <in>gtest-test-part.h</in>
                      <in>gtest-typed-test.h</in>
                      <in>gtest.h</in>
                      <in>gtest_pred_impl.h</in>
                      <in>gtest_prod.h</in>
                    </df>
                  </df>
                  <df name="m4">
                  </df>
                  <df name="make">
                  </df>
                  <df name="msvc">
                  </df>
                  <df name="samples">
                    <in>prime_tables.h</in>
                    <in>sample1.cc</in>
                    <in>sample1.h</in>
                    <in>sample10_unittest.cc</in>
                    <in>sample1_unittest.cc</in>
                    <in>sample2.cc</in>
                    <in>sample2.h</in>
                    <in>sample2_unittest.cc</in>
                    <in>sample3-inl.h</in>
                    <in>sample3_unittest.cc</in>
                    <in>sample4.cc</in>
                    <in>sample4.h</in>
                    <in>sample4_unittest.cc</in>
                    <in>sample5_unittest.cc</in>
                    <in>sample6_unittest.cc</in>
                    <in>sample7_unittest.cc</in>
                    <in>sample8_unittest.cc</in>
                    <in>sample9_unittest.cc</in>
                  </df>
                  <df name="scripts">
                    <df name="test">
                    </df>
                  </df>
                  <df name="src">
                    <in>gtest-all.cc</in>
                    <in>gtest-death-test.cc</in>
                    <in>gtest-filepath.cc</in>
                    <in>gtest-internal-inl.h</in>
                    <in>gtest-port.cc</in>
                    <in>gtest-printers.cc</in>
                    <in>gtest-test-part.cc</in>
                    <in>gtest-typed-test.cc</in>
                    <in>gtest.cc</in>
                    <in>gtest_main.cc</in>
                  </df>
                  <df name="test">
                    <in>gtest-death-test_ex_test.cc</in>
                    <in>gtest-death-test_test.cc</in>
                    <in>gtest-filepath_test.cc</in>
                    <in>gtest-linked_ptr_test.cc</in>
                    <in>gtest-listener_test.cc</in>
                    <in>gtest-message_test.cc</in>
                    <in>gtest-options_test.cc</in>
                    <in>gtest-param-test2_test.cc</in>
                    <in>gtest-param-test_test.cc</in>
                    <in>gtest-param-test_test.h</in>
                    <in>gtest-port_test.cc</in>
                    <in>gtest-printers_test.cc</in>
                    <in>gtest-test-part_test.cc</in>
                    <in>gtest-tuple_test.cc</in>
                    <in>gtest-typed-test2_test.cc</in>
                    <in>gtest-typed-test_test.cc</in>
                    <in>gtest-typed-test_test.h</in>
                    <in>gtest-unittest-api_test.cc</in>
                    <in>gtest_all_test.cc</in>
                    <in>gtest_break_on_failure_unittest_.cc</in>
                    <in>gtest_catch_exceptions_test_.cc</in>
                    <in>gtest_color_test_.cc</in>
                    <in>gtest_env_var_test_.cc</in>
                    <in>gtest_environment_test.cc</in>
                    <in>gtest_filter_unittest_.cc</in>
                    <in>gtest_help_test_.cc</in>
                    <in>gtest_list_tests_unittest_.cc</in>
                    <in>gtest_main_unittest.cc</in>
                    <in>gtest_no_test_unittest.cc</in>
                    <in>gtest_output_test_.cc</in>
                    <in>gtest_pred_impl_unittest.cc</in>
                    <in>gtest_premature_exit_test.cc</in>
                    <in>gtest_prod_test.cc</in>
                    <in>gtest_repeat_test.cc</in>
                    <in>gtest_shuffle_test_.cc</in>
                    <in>gtest_sole_header_test.cc</in>
                    <in>gtest_stress_test.cc</in>
                    <in>gtest_throw_on_failure_ex_test.cc</in>
                    <in>gtest_throw_on_failure_test_.cc</in>
                    <in>gtest_uninitialized_test_.cc</in>
                    <in>gtest_unittest.cc</in>
                    <in>gtest_xml_outfile1_test_.cc</in>
                    <in>gtest_xml_outfile2_test_.cc</in>
                    <in>gtest_xml_output_unittest_.cc</in>
                    <in>production.cc</in>
                    <in>production.h</in>
                  </df>
                  <df name="xcode">
                    <df name="Config">
                    </df>
                    <df name="gtest.xcodeproj">
                    </df>
                    <df name="Resources">
                    </df>
                    <df name="Samples">
                      <df name="FrameworkSample">
                        <df name="WidgetFramework.xcodeproj">
                        </df>
                        <in>widget.cc</in>
                        <in>widget.h</in>
                        <in>widget_test.cc</in>
                      </df>
                    </df>
                    <df name="Scripts">
                    </df>
                  </df>
                </df>
                <df name="include">
                  <df name="gmock">
                    <df name="internal">
                      <in>gmock-generated-internal-utils.h</in>
                      <in>gmock-internal-utils.h</in>
                      <in>gmock-port.h</in>
                    </df>
                    <in>gmock-actions.h</in>
                    <in>gmock-cardinalities.h</in>
                    <in>gmock-generated-actions.h</in>
                    <in>gmock-generated-function-mockers.h</in>
                    <in>gmock-generated-matchers.h</in>
                    <in>gmock-generated-nice-strict.h</in>
                    <in>gmock-matchers.h</in>
                    <in>gmock-more-actions.h</in>
                    <in>gmock-more-matchers.h</in>
                    <in>gmock-spec-builders.h</in>
                    <in>gmock.h</in>
                  </df>
                </df>
                <df name="make">
                </df>
                <df name="msvc">
                  <df name="2005">
                  </df>
                  <df name="2010">
                  </df>
                </df>
                <df name="scripts">
                  <df name="generator">
                    <df name="cpp">
                    </df>
                  </df>
                </df>
                <df name="src">
                  <in>gmock-all.cc</in>
                  <in>gmock-cardinalities.cc</in>
                  <in>gmock-internal-utils.cc</in>
                  <in>gmock-matchers.cc</in>
                  <in>gmock-spec-builders.cc</in>
                  <in>gmock.cc</in>
                  <in>gmock_main.cc</in>
                </df>
                <df name="test">
                  <in>gmock-actions_test.cc</in>
                  <in>gmock-cardinalities_test.cc</in>
                  <in>gmock-generated-actions_test.cc</in>
                  <in>gmock-generated-function-mockers_test.cc</in>
                  <in>gmock-generated-internal-utils_test.cc</in>
                  <in>gmock-generated-matchers_test.cc</in>
                  <in>gmock-internal-utils_test.cc</in>
                  <in>gmock-matchers_test.cc</in>
                  <in>gmock-more-actions_test.cc</in>
                  <in>gmock-nice-strict_test.cc</in>
                  <in>gmock-port_test.cc</in>
                  <in>gmock-spec-builders_test.cc</in>
                  <in>gmock_all_test.cc</in>
                  <in>gmock_ex_test.cc</in>
                  <in>gmock_leak_test_.cc</in>
                  <in>gmock_link2_test.cc</in>
                  <in>gmock_link_test.cc</in>
                  <in>gmock_link_test.h</in>
                  <in>gmock_output_test_.cc</in>
                  <in>gmock_stress_test.cc</in>
                  <in>gmock_test.cc</in>
                </df>
              </df>
              <df name="integration">
                <in>emitter_test.cpp</in>
                <in>encoding_test.cpp</in>
                <in>gen_emitter_test.cpp</in>
                <in>handler_spec_test.cpp</in>
                <in>handler_test.cpp</in>
                <in>load_node_test.cpp</in>
                <in>node_spec_test.cpp</in>
              </df>
              <df name="node">
                <in>node_test.cpp</in>
              </df>
              <in>handler_test.h</in>
              <in>main.cpp</in>
              <in>mock_event_handler.h</in>
              <in>ostream_wrapper_test.cpp</in>
              <in>regex_test.cpp</in>
              <in>specexamples.h</in>
            </df>
            <df name="util">
              <in>api.cpp</in>
              <in>parse.cpp</in>
              <in>read.cpp</in>
              <in>sandbox.cpp</in>
            </df>
          </df>
        </df>
        <in>drl_messages.pb.cc</in>
        <in>drl_messages.pb.h</in>
        <in>ui_odesim_dialog.h</in>
      </df>
      <df name="cfg">
        <df name="acrobot">
        </df>
        <df name="cart_double_pole">
        </df>
        <df name="cart_pole">
        </df>
        <df name="compass_walker">
        </df>
        <df name="flyer2d">
        </df>
        <df name="leo">
        </df>
        <df name="matlab">
        </df>
        <df name="pendulum">
          <df name="ou_test">
          </df>
        </df>
        <df name="test">
        </df>
      </df>
      <df name="doc">
      </df>
      <df name="externals">
        <df name="ann">
          <df name="include">
            <df name="ANN">
              <in>ANN.h</in>
              <in>ANN_backup.h</in>
              <in>ANNkd_tree.h</in>
              <in>ANNperf.h</in>
              <in>ANNrt.h</in>
              <in>ANNx.h</in>
            </df>
          </df>
          <df name="src">
            <in>ANN.cpp</in>
            <in>bd_fix_rad_search.cpp</in>
            <in>bd_pr_search.cpp</in>
            <in>bd_search.cpp</in>
            <in>bd_tree.cpp</in>
            <in>bd_tree.h</in>
            <in>brute.cpp</in>
            <in>kd_dump.cpp</in>
            <in>kd_fix_rad_search.cpp</in>
            <in>kd_fix_rad_search.h</in>
            <in>kd_pr_search.cpp</in>
            <in>kd_pr_search.h</in>
            <in>kd_search.cpp</in>
            <in>kd_search.h</in>
            <in>kd_split.cpp</in>
            <in>kd_split.h</in>
            <in>kd_tree.cpp</in>
            <in>kd_tree.h</in>
            <in>kd_util.cpp</in>
            <in>kd_util.h</in>
            <in>perf.cpp</in>
            <in>pr_queue.h</in>
            <in>pr_queue_k.h</in>
          </df>
        </df>
        <df name="cma">
          <df name="doc">
          </df>
          <df name="include">
            <df name="cma">
              <in>boundary_transformation.h</in>
              <in>cmaes.h</in>
              <in>cmaes_interface.h</in>
            </df>
          </df>
          <df name="scripts">
            <in>plotcmaesdat.m</in>
          </df>
          <df name="share">
          </df>
          <df name="src">
            <in>boundary_transformation.c</in>
            <in>cmaes.c</in>
            <in>example_boundary.c</in>
            <in>example_restarts.c</in>
            <in>example_short.c</in>
          </df>
        </df>
        <df name="cppzmq">
          <df name="cmake">
          </df>
          <df name="include">
            <in>zmq.hpp</in>
            <in>zmq_messenger.h</in>
          </df>
          <df name="src">
            <in>zmq_messenger.cpp</in>
          </df>
        </df>
        <df name="ics">
          <df name="include">
            <in>libics.h</in>
            <in>libics_ll.h</in>
            <in>libics_sensor.h</in>
            <in>libics_test.h</in>
          </df>
          <df name="src">
            <in>libics_binary.c</in>
            <in>libics_compress.c</in>
            <in>libics_conf.h</in>
            <in>libics_data.c</in>
            <in>libics_gzip.c</in>
            <in>libics_history.c</in>
            <in>libics_intern.h</in>
            <in>libics_preview.c</in>
            <in>libics_read.c</in>
            <in>libics_sensor.c</in>
            <in>libics_test.c</in>
            <in>libics_top.c</in>
            <in>libics_util.c</in>
            <in>libics_write.c</in>
          </df>
        </df>
        <df name="itc">
          <df name="include">
            <df name="itc">
              <in>itc.h</in>
              <in>queue.h</in>
            </df>
          </df>
          <df name="src">
          </df>
        </df>
        <df name="odesim">
          <df name="dbl">
            <df name="externals">
              <df name="bithacks">
                <in>bithacks.h</in>
              </df>
            </df>
            <df name="platform">
              <df name="control">
                <in>GenericState.cpp</in>
                <in>GenericState.h</in>
                <in>STG.h</in>
                <in>STGListener.h</in>
              </df>
              <df name="gui">
                <df name="qt">
                  <in>GLWidget.cpp</in>
                  <in>GLWidget.h</in>
                </df>
              </df>
              <df name="io">
                <df name="configuration">
                  <in>Configuration.cpp</in>
                  <in>Configuration.h</in>
                  <in>OptionVars.h</in>
                  <in>XMLConfiguration.cpp</in>
                  <in>XMLConfiguration.h</in>
                </df>
                <df name="logging">
                  <df name="std">
                    <in>StdLog2.cpp</in>
                  </df>
                  <in>Log.h</in>
                  <in>Log2.h</in>
                  <in>StdLog.h</in>
                </df>
              </df>
              <df name="simulation">
                <df name="odesim">
                  <in>GenericODESim.cpp</in>
                  <in>GenericODESim.h</in>
                  <in>ODEBodies.cpp</in>
                  <in>ODEBodies.h</in>
                  <in>ODECollisions.cpp</in>
                  <in>ODECollisions.h</in>
                  <in>ODEDebug.h</in>
                  <in>ODEGeoms.cpp</in>
                  <in>ODEGeoms.h</in>
                  <in>ODEJointMotors.cpp</in>
                  <in>ODEJointMotors.h</in>
                  <in>ODEJoints.cpp</in>
                  <in>ODEJoints.h</in>
                  <in>ODELogging.h</in>
                  <in>ODEObjects.cpp</in>
                  <in>ODEObjects.h</in>
                  <in>ODEPlaceable.h</in>
                  <in>ODESim.cpp</in>
                  <in>ODESim.h</in>
                  <in>STGODESim.h</in>
                </df>
                <df name="simvis">
                  <in>SimVis.cpp</in>
                  <in>SimVis.h</in>
                  <in>SimVisWidget.cpp</in>
                  <in>SimVisWidget.h</in>
                </df>
                <in>GenericSim.h</in>
                <in>ODEMatrix.cpp</in>
                <in>ODEMatrix.h</in>
                <in>PlaceableObject.h</in>
              </df>
              <df name="threading">
                <in>BaseThread.hpp</in>
                <in>NonRealTimeThread.hpp</in>
                <in>PosixNonRealTimeThread.hpp</in>
                <in>WaitEvent.hpp</in>
              </df>
            </df>
          </df>
        </df>
        <df name="rbdl">
          <df name="cmake">
          </df>
          <df name="share">
          </df>
          <df name="src">
          </df>
        </df>
        <df name="yaml-cpp">
          <df name="share">
          </df>
          <df name="src">
          </df>
        </df>
      </df>
      <df name="share">
        <df name="taskmaster">
        </df>
      </df>
      <df name="tests">
        <df name="template">
        </df>
      </df>
    </df>
  </logicalFolder>
  <projectmakefile>build/Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_signals>
        </gdb_signals>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" hi 5</runcommandpicklistitem>
          <runcommandpicklistitem>cd ../bin; "${OUTPUT_PATH}" ../cfg/pendulum/sarsa_tc.yaml</runcommandpicklistitem>
          <runcommandpicklistitem>grlc ../cfg/pendulum/sarsa_tc.yaml</runcommandpicklistitem>
          <runcommandpicklistitem>./grlc ../cfg/pendulum/sarsa_tc.yaml</runcommandpicklistitem>
          <runcommandpicklistitem> "${OUTPUT_PATH}" ../cfg/pendulum/sarsa_tc.yaml</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" ../cfg/pendulum/sarsa_tc.yaml</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" ../tests/cart_doble_pole-ac-tc.yaml</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" ../tests/cart_double_pole-ac-tc.yaml</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" ../cfg/rgo_mountain_sarsa.yaml</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}" ../cfg/rgo_mountain_sarsa.yaml</runcommand>
        <rundir>bin</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
